{"remainingRequest":"/Users/user/Desktop/exercises/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/user/Desktop/exercises/node_modules/vuetify-loader/lib/loader.js!/Users/user/Desktop/exercises/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/Desktop/exercises/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/exercises/src/views/ExerciseTwo.vue?vue&type=template&id=730e270a&","dependencies":[{"path":"/Users/user/Desktop/exercises/src/views/ExerciseTwo.vue","mtime":1576756648165},{"path":"/Users/user/Desktop/exercises/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/exercises/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/user/Desktop/exercises/node_modules/vuetify-loader/lib/loader.js","mtime":1567240333000},{"path":"/Users/user/Desktop/exercises/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/exercises/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-container\",\n    { attrs: { id: \"exercise-two\" } },\n    [\n      _c(\n        \"v-row\",\n        { attrs: { \"no-gutters\": \"\" } },\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h1\", [_vm._v(\"Exercise 2: Composing Components and v-select\")])\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"p\", [\n              _vm._v(\n                \"Edit the HTML and/or javascript to change the appearance and functionality.\"\n              )\n            ])\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"v-row\",\n        { attrs: { dense: \"\" } },\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 1\")]),\n            _vm._v(\n              \"\\n      Create a component called Counter.vue which is simply a v-btn. Import it\\n      to the column below.\\n    \"\n            )\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } })\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 2\")]),\n            _vm._v(\n              '\\n      Add in a prop to the component so we can give the button a color.\\n      For now, make that \"color\" variable equal to blue.\\n    '\n            )\n          ])\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        { attrs: { dense: \"\" } },\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 3\")]),\n            _vm._v(\n              '\\n      Declare a \"count\" variable for the button. Add an action to the v-btn so that\\n      when we click it, the count increases. Then, compose a few instances of the button below. If\\n      you click on one, does it affect the count of the others?\\n    '\n            )\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } })\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 4\")]),\n            _vm._v(\n              \"\\n      Add a slot to the button so that we can add text to it from here. Compose\\n      that button below with text between the opening and closing tags.\\n      \"\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://vuejs.org/v2/guide/components-slots.html\",\n                  target: \"_blank\"\n                }\n              },\n              [_vm._v(\"For reference\")]\n            )\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } })\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 5\")]),\n            _vm._v(\n              '\\n      Now, make a v-select below with different color choices. For now, just go with \"red\", \"blue\", \"green\", \"yellow\".\\n      Bind the choice that is selected from that list to the \"color\" variable. The buttons should all change color.\\n      '\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://vuetifyjs.com/en/components/selects\",\n                  target: \"_blank\"\n                }\n              },\n              [_vm._v(\"For reference\")]\n            )\n          ]),\n          _c(\"v-col\", { attrs: { cols: \"12\" } })\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 6\")]),\n            _vm._v(\n              \"\\n      We want to color selector to have capitalized colors, but send in lowercase colors to our component.\"\n            ),\n            _c(\"br\"),\n            _vm._v(\n              '\\n      Change \"colors\" to a list of objects with a \"text\" and \"value\" field.'\n            ),\n            _c(\"br\"),\n            _vm._v(\n              \"\\n      The text is what we will show users and the value is the value that will be associated\\n      with the text they click on. For example, green object would like like:\"\n            ),\n            _c(\"br\"),\n            _vm._v(\"\\n      { text: 'Green', value: 'green' }\"),\n            _c(\"br\"),\n            _vm._v(\"\\n      Incorporate this into the v-select.\\n      \"),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href:\n                    \"https://vuetifyjs.com/en/components/selects#customized-item-text-and-value\",\n                  target: \"_blank\"\n                }\n              },\n              [_vm._v(\"For reference\")]\n            )\n          ])\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Part 7\")]),\n            _vm._v(\n              '\\n      Does the select still work properly if you change \"value\" to \"val\"? Observe the value of\\n      color below: '\n            ),\n            _c(\"br\"),\n            _vm._v(\"\\n      \" + _vm._s(_vm.color) + \"\\n    \")\n          ])\n        ],\n        1\n      ),\n      _c(\"v-divider\", { staticClass: \"my-4\" }),\n      _c(\n        \"v-row\",\n        [\n          _c(\"v-col\", { attrs: { cols: \"12\" } }, [\n            _c(\"h2\", [_vm._v(\"Challenge\")]),\n            _vm._v(\n              \"\\n      Can you figure out how to make a button rounded? Hint: Search the vuetify documentation for buttons.\\n    \"\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}